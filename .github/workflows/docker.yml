# Назначение файла: CI для проверки Docker и сборки образов
# Модули: создание .env из Repository secrets, docker compose config и build
name: 'Docker'
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6.0
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh -u admin -p admin --authenticationDatabase admin --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3

      - name: Создание .env
        run: |
          cp .env.example .env
          cat <<EOF >> .env
          BOT_TOKEN=${{ secrets.BOT_TOKEN }}
          CHAT_ID=${{ secrets.CHAT_ID }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          APP_URL=https://example.com
          MONGO_DATABASE_URL=${{ secrets.MONGO_DATABASE_URL }}
          EOF

      - name: Вывод MONGO_DATABASE_URL без пароля
        run: |
          url=$(grep '^MONGO_DATABASE_URL=' .env | cut -d '=' -f2-)
          if [[ $url =~ ^mongodb(\+srv)?:\/\/[^:]+:[^@]+@ ]]; then
            sanitized=$(echo "$url" | sed -E 's/^(mongodb(\+srv)?:\/\/[^:]+):[^@]*(@.*)/\1\3/')
            echo "Отфильтрованный URL: $sanitized"
          else
            echo "Неверный формат MONGO_DATABASE_URL" >&2
            exit 1
          fi

      - name: Проверка переменных MONGO_DATABASE_URL и APP_URL
        run: |
          grep -E '^MONGO_DATABASE_URL|^APP_URL' .env \
            | sed -E 's#(mongodb(\+srv)?://[^:]+):[^@]+@#\1:***@#'

      - name: Установка зависимостей
        run: ./scripts/install_bot_deps.sh

      - name: Запуск линтера
        run: pnpm lint

      - name: Тесты
        run: pnpm --dir apps/api test

      - name: Проверка MongoDB
        run: pnpm --dir apps/api run check:mongo

      - name: Проверка docker-compose.yml
        run: docker compose config
      - name: Сборка образов
        run: docker compose build
      - name: Удаление .env
        run: rm .env
